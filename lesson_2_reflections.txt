(my own) How can I find when a bug is introduced?
  - by using git log and:
      1) looking thought commit comments for possible flags of changes
	  2) testing prior commits to narrow-down when a bug was introduced
	      2b) then once pinpointed to commit, git diff between previous and current version
		  
(my own) Really like the concept map / quiz idea for FMA, etc...
   - e.g. show relationships and empty boxes and make people fill them out and then provide feedback
		  
What happens when you initialize a repository? Why do you need to do it?
	- git creates a .git directory and starts tracking the directory (though no commits are done yet / no files added)
	- use git status to confirm

How is the staging area different from the working directory and the repository?
	- staging is what you do want to potentially commit, before it's committed
	? if a file is already being tracked, can you remove it / could you still add it again? (we'll find out)
	
What value do you think it offers?
    - lets you prep for a commit

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?